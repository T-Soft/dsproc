name: dsproc Build

on:
  push:
    branches: master
    #tags:
    #  - v*

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
    
    - name: Test list files - solution folder
      working-directory: ./UniDsproc
      run: ls
    
    #- name: Navigate to solution directory
    #  run: cd UniDsproc
    #  working-directory: $GITHUB_WORKSPACE

    #- name: Test list files - solution dir
    #  run: ls

    - name: Create Build Output Directory
      run: mkdir _artifacts
      
    - name: Restore Packages
      working-directory: ./UniDsproc
      run: nuget restore UniDsproc.sln

    - name: Build Solution
      working-directory: ./UniDsproc
      run: |
        msbuild.exe UniDsproc.sln /nologo /nr:false /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:OutputPath="../../_artifacts"
      
    - uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: _artifacts # or path/to/artifact
    
    - name: Set enviroment for github-release
      run: |
        echo ::set-env name=RELEASE_TAG::"v1.0.0"
        echo ::set-env name=RELEASE_NAME::"$GITHUB_WORKFLOW"

    - uses: meeDamian/github-release@2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.RELEASE_TAG }}
        name: ${{ env.RELEASE_NAME }}
        files: _artifacts
    
    #- name: Create Release
    #  id: create_release
    #  uses: actions/create-release@v1
    #  env:
    #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #  with:
    #    tag_name: ${{ github.ref }}
    #    release_name: Release ${{ github.ref }}
    #    body: |
    #        Changes in this Release
    #        - First Change
    #        - Second Change
    #    draft: false
    #    prerelease: false
        
    #- name: GitHub Releases
    #  uses: fnkr/github-action-ghr@v1.3
    #  env:
    #      GHR_COMPRESS: zip
    #      GHR_PATH: ./_build
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
